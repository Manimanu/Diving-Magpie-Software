// ************************************************************************ //
// WARNING                                                                    
// -------                                                                    
// The types declared in this file were generated from data read from a       
// Type Library. If this type library is explicitly or indirectly (via        
// another type library referring to this type library) re-imported, or the   
// 'Refresh' command of the Type Library Editor activated while editing the   
// Type Library, the contents of this file will be regenerated and all        
// manual modifications will be lost.                                         
// ************************************************************************ //

// C++ TLBWRTR : $Revision:   1.134.1.39  $
// File generated on 6/30/00 10:39:39 PM from Type Library described below.

// ************************************************************************ //
// Type Lib: C:\Wombat\Pro\DMS_Common\DMS_Comm.dll (1)
// IID\LCID: {FC99C7B2-4A88-11D4-8A03-0020AFCC5695}\0
// Helpfile: 
// DepndLst: 
//   (1) v2.0 stdole, (C:\WINNT\System32\STDOLE2.TLB)
//   (2) v4.0 StdVCL, (C:\WINNT\System32\STDVCL40.DLL)
// ************************************************************************ //
#ifndef   __DMS_Comm_OCX_h__
#define   __DMS_Comm_OCX_h__

#pragma option push -b -w-inl

#include <utilcls.h>
#if !defined(__UTILCLS_H_VERSION) || (__UTILCLS_H_VERSION < 0x0500)
//
// The code generated by the TLIBIMP utility or the Import|TypeLibrary 
// and Import|ActiveX feature of C++Builder rely on specific versions of
// the header file UTILCLS.H found in the INCLUDE\VCL directory. If an 
// older version of the file is detected, you probably need an update/patch.
//
#error "This file requires a newer version of the header UTILCLS.H" \
       "You need to apply an update/patch to your copy of C++Builder"
#endif
#include <olectl.h>
#include <ocidl.h>
#if !defined(_NO_VCL)
#include <stdvcl.hpp>
#endif  //   _NO_VCL
#include <ocxproxy.h>

#include "DMS_Comm_TLB.h"
namespace Dms_comm_tlb
{

// *********************************************************************//
// HelpString: DMS_Comm Library
// Version:    1.0
// *********************************************************************//


// *********************************************************************//
// COM Component Proxy Class Declaration
// Component Name   : TDMS_Common
// Help String      : DMS_Common Object
// Default Interface: IDMS_Common
// Def. Intf. Object: IDMS_CommonPtr
// Def. Intf. DISP? : No
// Event   Interface: 
// TypeFlags        : (2) CanCreate
// *********************************************************************//
class PACKAGE TDMS_Common : public Oleserver::TOleServer
{
  IDMS_CommonPtr m_DefaultIntf;
  _di_IUnknown __fastcall GetDunk();
public:
  __fastcall TDMS_Common(TComponent* owner) : Oleserver::TOleServer(owner)
  {}

  IDMS_CommonPtr& GetDefaultInterface();
  void __fastcall InitServerData();
  void __fastcall Connect();
  void __fastcall Disconnect();
  void __fastcall BeforeDestruction();
  void __fastcall ConnectTo(IDMS_CommonPtr intf);


  void __fastcall Set_Icon(long Param1/*[in]*/)
  {
    GetDefaultInterface()->set_Icon(Param1/*[in]*/);
  }

  void __fastcall Set_ProductName(BSTR sProductName/*[in]*/)
  {
    GetDefaultInterface()->set_ProductName(sProductName/*[in]*/);
  }

  BSTR __fastcall Get_ProductName(void)
  {
    return GetDefaultInterface()->get_ProductName();
  }

  void __fastcall Set_ProductCode(BSTR sProductCode/*[in]*/)
  {
    GetDefaultInterface()->set_ProductCode(sProductCode/*[in]*/);
  }

  BSTR __fastcall Get_ProductCode(void)
  {
    return GetDefaultInterface()->get_ProductCode();
  }

  void __fastcall Set_AuthCode(BSTR Param1/*[in]*/)
  {
    GetDefaultInterface()->set_AuthCode(Param1/*[in]*/);
  }

  int __fastcall Get_IsRegistered(void)
  {
    return GetDefaultInterface()->get_IsRegistered();
  }

  int __fastcall Get_Commercial(void)
  {
    return GetDefaultInterface()->get_Commercial();
  }

  void __fastcall Set_Commercial(int Value/*[in]*/)
  {
    GetDefaultInterface()->set_Commercial(Value/*[in]*/);
  }

  void __fastcall About(void)
  {
    GetDefaultInterface()->About();
  }

  void __fastcall Register(void)
  {
    GetDefaultInterface()->Register();
  }

  int __fastcall IsSolidWorksFile(BSTR sFileName/*[in]*/)
  {
    return GetDefaultInterface()->IsSolidWorksFile(sFileName/*[in]*/);
  }

  int __fastcall IsSolidWorksRunning(void)
  {
    return GetDefaultInterface()->IsSolidWorksRunning();
  }

  BSTR __fastcall GetMachineID(void)
  {
    return GetDefaultInterface()->GetMachineID();
  }

  __property long Icon={ write=Set_Icon };
  __property BSTR AuthCode={ write=Set_AuthCode };
  __property int IsRegistered={ read=Get_IsRegistered };
  __property BSTR ProductName={ read=Get_ProductName, write=Set_ProductName, stored=false };
  __property BSTR ProductCode={ read=Get_ProductCode, write=Set_ProductCode, stored=false };
  __property int Commercial={ read=Get_Commercial, write=Set_Commercial, stored=false };
};

};     // namespace Dms_comm_tlb

#if !defined(NO_IMPLICIT_NAMESPACE_USE)
using  namespace Dms_comm_tlb;
#endif

#pragma option pop

#endif // __DMS_Comm_OCX_h__
